pool:
  vmImage: 'Ubuntu 16.04'

variables:
  APP_NAME: "carts"
  VERSION: "1"
  ARTEFACT_ID: "sockshop/$(APP_NAME)"
  DOCKER_REGISTRY: "$(dockerRegistryEndpoint)"
  SUBSCRIPTION_ENDPOINT: "InnovationLab-Dev"
  TAG: "$(DOCKER_REGISTRY)/$(ARTEFACT_ID)"
  TAG_DEV: "$(TAG)-$(VERSION)-$(build.buildId)"
  TAG_STAGING: "$(TAG)-$(VERSION)"

steps:
- script: |
    $myversion = "Get-Content .\version -Raw"
    echo myversion = $myversion
    Write-Host "##vso[task.setvariable variable=theVersion;]$myversion"

- script: |
    echo MyVERSION = $myversion
    echo THEVERSION = $THEVERSION
    echo THEVERSION = $(THEVERSION)
    echo theVersion = $theVersion
    echo theVersion = $(theVersion)

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'

- task: Docker@1
  displayName: 'Build an image'
  inputs:
    imageName: $(TAG_DEV)

- task: Docker@1
  displayName: Login
  inputs:
    azureSubscriptionEndpoint: $(SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(DOCKER_REGISTRY)
    command: login

- task: Docker@1
  displayName: 'Push an image'
  inputs:
    azureSubscriptionEndpoint: $(SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(DOCKER_REGISTRY)
    command: 'push'
    imageName: $(TAG_DEV)

- script: |
    sed -i 's#image: .*#image: $(TAG_DEV)#' manifest/$(APP_NAME).yml

- task: CopyFiles@2
  inputs:
    contents: manifest/*
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: Yaml